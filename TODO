Known Issues (ordered by importance)
------------------------------------

- Although sqlite3 support is now optional, and won't be compiled in
  if not present, there are following problems to be fixed.
  - mediatomb server still looks for the sqlite3.db file.
  - tomb-install depends on sqlite3 and won't work if it is not installed.
  Hence sqlite3 is in fact NOT optional yet :)

- file extensions in extension-mimetype mappings are case sensitive.
  
- When directories are added recursively all subdirectories traversed
  are always created in the PC Directory, regardless if any files from
  those directories are taken to the database. This produces A LOT of
  garbage in the PC Directory and must be fixed ASAP.

- Make all metadata produced by javascript be stored in the database.
  Instead of iterating through all known metadata keys, should iterate
  through all meta properties of the object given to addCdsObject().
  (still don't know how to iterate over properties with spidermonkey)

- Session ID's do not timeout and/or are destroyed.

- opening web interface directly (not via bookmark file)
  with UI disabled will show a 404 error.
  A meaningfull error should be shown instead.

- XML parser is very limited. Does not even support comments :)
  Switching to expat would probably make sense. Correct XML parsing is 
  an essential capatility of a UPnP device.

- add mimetype mappings to serve request handler
  
Planned improvements / features (ordered by importance)
-------------------------------------------------------
- report right file length in file_request_handler
- exiv2 thumbnail support
- readonly access to <res> metadata from
  javascript
- add auxilary metadata fields + readonly access from
  javascript

- introduce means to cascade scripts. Probably something like include()
  function or preprocessor directive.

- on the fly reloading of scripts and immediate automatic recreation
  of virtual structure. Should be simple - delete all virtual objects and
  pass every item inside the PC Directory to the script again. This will
  simplify development of JS scripts a lot.

- Virtual and corresponding items should share common metadata. Normally
  almost all metadata will be equal. Currently all data is copied for every
  created virtual item. Metadata handling functionality should be reviewed
  once more.

- Ability to explicitely define filesystem directories and files
  visible to the filesystem browser. Will be done using the
  include/exclude ruleset semantics similar to Jakarta Ant.
  
- Rewrite web presentation layer. Replace XML/XSL based presentation with
  plain HTML/CSS presentation. XML/XSL approach seemed to be attractive
  at the beginning, but as the server evolved it turned out to be
  cumbersome to work with and instead of simplifying development and
  providing better presentatin consistency did the opposite.
  An option is to do XSLT transformation server side, but this would
  increase system requirements to run the server and imply further
  dependencies on heavy libraries, which we would rather avoid.
  Another reason is browser compatibility.

- Add source filename and line number to log_debug output

